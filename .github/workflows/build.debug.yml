name: Build and Package [Debug] [master]

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  PROJECT_BIN: src/Plaid/bin
  PROJECT_MAIN: src/Plaid/Plaid.csproj
  PROJECT_TESTS: tests/Plaid.MSTest/Plaid.MSTest.csproj
  BUILD_CONFIGURATION: Debug
  REPO_OWNER: ${{ github.repository_owner }}
  REPO_URL: https://github.com/${{ github.repository_owner }}/Plaid.NET.git
  NUGET_SOURCE: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

jobs:
  
  env-setup:
    runs-on: windows-latest
    steps:
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.1
      - name: Setup .NET Core v3.1
        uses: actions/setup-dotnet@v1.6.0
        with:
          dotnet-version: 3.1.x
          
  build:
    needs: [env-setup]
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.2
      - name: Update Project Metadata
        run: |
          [xml]$xml = Get-Content $env:PROJECT_MAIN
          $xml.SelectNodes("//PropertyGroup/Company") | % { $_."#text" = $env:REPO_OWNER }
          echo "Company: $($env:REPO_OWNER)"
          $xml.SelectNodes("//PropertyGroup/RepositoryUrl") | % { $_."#text" = $env:REPO_URL }
          echo "RepositoryUrl: $($env:REPO_URL)"
          $version = "$($xml.SelectNodes('//PropertyGroup/Version').'#text').$($env:GITHUB_RUN_NUMBER)"
          if ($version -eq '') { Write-Error "Missing Version Number" }
          $xml.SelectNodes("//PropertyGroup/Version") | % { $_."#text" = "$($version)-beta" }
          echo "Version: $($xml.SelectNodes('//PropertyGroup/Version').'#text')"
          $xml.SelectNodes("//PropertyGroup/AssemblyVersion") | % { $_."#text" = $version }
          echo "AssemblyVersion: $($xml.SelectNodes('//PropertyGroup/AssemblyVersion').'#text')"
          $xml.SelectNodes("//PropertyGroup/PackageVersion") | % { $_."#text" = "$($version)-beta" }
          echo "PackageVersion: $($xml.SelectNodes('//PropertyGroup/PackageVersion').'#text')"
          $xml.SelectNodes("//PropertyGroup/AssemblyFileVersion") | % { $_."#text" = $version }
          echo "AssemblyFileVersion: $($xml.SelectNodes('//PropertyGroup/AssemblyFileVersion').'#text')"
          $xml.Save($env:PROJECT_MAIN)
      - name: Extract Project Metadata
        run: |
          [xml]$xml = Get-Content $env:PROJECT_MAIN;
          $val = $xml.SelectNodes('//PropertyGroup/AssemblyName') | Select-Object -Expand '#text'
          echo "ASSEMBLY_NAME: $($val)"
          echo "::set-env name=ASSEMBLY_NAME::$($val)"
          $val = $xml.SelectNodes('//PropertyGroup/Version') | Select-Object -Expand '#text'
          echo "NUGET_VERSION: $($val)"
          echo "::set-env name=NUGET_VERSION::$($val)"
      - name: Build
        run: dotnet build --configuration $env:BUILD_CONFIGURATION $env:PROJECT_MAIN
      - name: Upload Build Output Artifact
        uses: actions/upload-artifact@v2.1.3
        with:
          # Artifact name
          name: Plaid.${{ env.BUILD_CONFIGURATION }}
          # A file, directory or wildcard pattern that describes what to upload
          path: ${{ env.PROJECT_BIN }}/${{ env.BUILD_CONFIGURATION }}/netstandard2.0/**/*
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error
#
# Cannot enable Tests as it requires a secrets.json file which should not be checked into source control
#      - name: Test
#        run: dotnet test --configuration $env:BUILD_CONFIGURATION --verbosity normal $env:PROJECT_TESTS
#
      - name: Package
        run: dotnet pack --include-source --include-symbols --configuration $env:BUILD_CONFIGURATION $env:PROJECT_MAIN --verbosity normal
      - name: Upload NuGet Package Artifact
        uses: actions/upload-artifact@v2.1.3
        with:
          # Artifact name
          name: Plaid.${{ env.BUILD_CONFIGURATION }}.NuGet
          # A file, directory or wildcard pattern that describes what to upload
          path: ${{ env.PROJECT_BIN }}/${{ env.BUILD_CONFIGURATION }}/*.nupkg
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error
      #- name: Add GitHub NuGet Source
      #  run: dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json -n github -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to Github Packages
        run: |
          dotnet nuget add source ${{ env.NUGET_SOURCE }} -n github -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          dotnet nuget push ${{ env.PROJECT_BIN }}/${{ env.BUILD_CONFIGURATION }}/${{ env.ASSEMBLY_NAME }}.${{ env.NUGET_VERSION }}.nupkg --source "github" --skip-duplicate
